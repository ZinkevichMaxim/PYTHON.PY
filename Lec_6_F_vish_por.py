# def f(x):
#     return x*x
# print(f(5))
# print(type(f))
# a = f
# print(type(a))
# print(a(5))

# –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –∞ - –ø–µ—Ä–µ–º–µ–Ω–Ω–Ω–∞—è, –∫–æ—Ç–æ—Ä–∞—è —Ö—Ä–∞–Ω–∏—Ç –≤ —Å–µ—å–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ—É–Ω–∫—Ü–∏—é f

# def calk_1(a):
#     return a+a

# def calk_2(a):
#     return a*a

# def math(op, x):
#     print(op(x))

# math(calk_2, 5)

# –í —Ñ—É–Ω–∫—Ü–∏—é math –º—ã –ø–µ—Ä–µ–¥–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ—É–Ω–∫—Ü–∏–∏ calk_1/2

# def calk_1(a, b):
#      return a+b

# calk_1 = lambda a, b : a+b        # –¥—è–º–±–¥–∞ —Ñ—É–Ω–∫—Ü–∏—è - —Å–æ–æ–∫—Ä–∞—â–µ–Ω–∞—è –∑–∞–ø–∏—Å—å

# def calk_2(a, b):
#      return a*b

# def math(op, x, y):
#       print(op(x, y))

# # math(calk_1, 5, 45)


# math(lambda a, b : a+b, 5, 45)

# 1. –í —Å–ø–∏—Å–∫–µ —Ö—Ä–∞–Ω—è—Ç—Å—è —á–∏—Å–ª–∞. –ù—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Ç–æ–ª—å–∫–æ —á—ë—Ç–Ω—ã–µ —á–∏—Å–ª–∞ –∏ —Å–æ—Å—Ç–∞–≤–∏—Ç—å
# —Å–ø–∏—Å–æ–∫ –ø–∞—Ä (—á–∏—Å–ª–æ; –∫–≤–∞–¥—Ä–∞—Ç —á–∏—Å–ª–∞).
# –ü—Ä–∏–º–µ—Ä: 1 2 3 5 8 15 23 38
# –ü–æ–ª—É—á–∏—Ç—å: [(2, 4), (8, 64), (38, 1444)]

# data = [1, 2, 3, 5, 8, 15, 23, 38]
# out = []
# for i in data :
#     if i % 2 == 0:
#         out.append((i, i ** 2))
# print(out)

# –ö–∞–∫ –≤–∞—Ä–∏–∞–Ω—Ç

# def select(f, col):
#     return [f(x) for x in col]

# def where(f, col):
#     return [x for x in col if f(x)]

# data = [1, 2, 3, 5, 8, 15, 23, 38]

# res = select(int, data)
# print(res)
# res = where(lambda x: x % 2 == 0, res)
# print(res) 
# res = select(lambda x: (x, x*x), res)
# print(res)

# –§–£–ù–ö–¶–ò–Ø map

# üí° –§—É–Ω–∫—Ü–∏—è map() –ø—Ä–∏–º–µ–Ω—è–µ—Ç —É–∫–∞–∑–∞–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –∫ –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É
# –∏—Ç–µ—Ä–∏—Ä—É–µ–º–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ç–µ—Ä–∞—Ç–æ—Ä —Å –Ω–æ–≤—ã–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏.

# list_1 = [x for x in range(1, 20)]
# print(list_1)

# list_1 = list(map(lambda x: x + 10, list_1))
# print(list_1)

# –ó–∞–¥–∞—á–∞: C –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≤–≤–æ–¥–∏—Ç—Å—è –Ω–µ–∫–∏–π –Ω–∞–±–æ—Ä —á–∏—Å–µ–ª, –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è
# –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–æ–±–µ–ª. –≠—Ç–æ—Ç –Ω–∞–±–æ—Ä —á–∏—Å–µ–ª –±—É–¥–µ—Ç —Å—á–∏—Ç–∞–Ω –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Å—Ç—Ä–æ–∫–∏. –ö–∞–∫
# –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å list —Å—Ç—Ä–æ–∫ –≤ list —á–∏—Å–µ–ª?

# data = '1 2 3 5 8 15 23 38'
# print(data)

# # data = data.split()
# # print(data)

# data = list(map(int, data.split()))
# print(data)


# –§—É–Ω–∫—Ü–∏—è filter
# üí° –§—É–Ω–∫—Ü–∏—è filter() –ø—Ä–∏–º–µ–Ω—è–µ—Ç —É–∫–∞–∑–∞–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –∫ –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É
# –∏—Ç–µ—Ä–∏—Ä—É–µ–º–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ç–µ—Ä–∞—Ç–æ—Ä —Å —Ç–µ–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏, –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö
# —Ñ—É–Ω–∫—Ü–∏—è –≤–µ—Ä–Ω—É–ª–∞ True.

# data = [15, 65, 9, 36, 175]
# res = list(filter(lambda x: x % 10 == 5, data))
# print(res)

# –§—É–Ω–∫—Ü–∏—è zip
# üí° –§—É–Ω–∫—Ü–∏—è zip() –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –∫ –Ω–∞–±–æ—Ä—É –∏—Ç–µ—Ä–∏—Ä—É–µ–º—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –∏
# –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ç–µ—Ä–∞—Ç–æ—Ä —Å –∫–æ—Ä—Ç–µ–∂–∞–º–∏ –∏–∑ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö

# users = ['user1', 'user2', 'user3', 'user4', 'user5']
# ids = [4, 5, 9, 14, 7]
# data = list(zip(users, ids))
# print(data) 

# –ü–†–û–ë–ï–ì–ê–ï–¢ –ü–û –°–ê–ú–û–ú–£ –ö–û–†–û–¢–ö–û–ú–£ –°–ü–ò–°–ö–£

# users = ['user1', 'user2', 'user3', 'user4', 'user5']
# ids = [4, 5, 9, 14, 7]
# salary = [111, 222, 333]
# data = list(zip(users, ids, salary))
# print(data)


# –§—É–Ω–∫—Ü–∏—è enumerate
# üí° –§—É–Ω–∫—Ü–∏—è enumerate() –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –∫ –∏—Ç–µ—Ä–∏—Ä—É–µ–º–æ–º—É –æ–±—ä–µ–∫—Ç—É –∏
# –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –∏—Ç–µ—Ä–∞—Ç–æ—Ä —Å –∫–æ—Ä—Ç–µ–∂–∞–º–∏ –∏–∑ –∏–Ω–¥–µ–∫—Å–∞ –∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤—Ö–æ–¥–Ω—ã—Ö
# –¥–∞–Ω–Ω—ã—Ö.

# –ü–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–æ–Ω—É–º–µ—Ä–æ–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–∞–Ω–Ω—ã—Ö

# users = ['user1', 'user2', 'user3']
# data = list(enumerate(users))
# print(data)


